Q)You have been given an integer array/list(ARR) of size N which contains numbers from 0 to (N - 2). Each number is present at least once. That is, if N = 5, the array/list constitutes values ranging from 0 to 3 and among these, there is a single integer value that is present twice. You need to find and return that duplicate number present in the array.
soln -int duplicateNumber(int *arr, int size)
{


      
     
    
        for(int i = 0; i<size; i++){
        for(int j =i+1; j<size; j++){
            if(arr[i]==arr[j]){
                return arr[i];
            }
        }
    }
    return -1;

//using XOR approach

    int xor1 = 0; // XOR of array elements
    for (int i = 0; i < size; i++) {
        xor1 = xor1 ^ arr[i];
    }

    int xor2 = 0; // XOR of numbers from 0 to N-2
    for (int i = 0; i <= size - 2; i++) {
        xor2 = xor2 ^ i;
    }

    int duplicate = xor1 ^ xor2;
    return duplicate;
}
 }
